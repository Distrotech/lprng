           Printcap Databases for LPRng
              Patrick Powell
          Original:Sat Mar  9 10:06:17 PST 1996
          Updated: Sun Sep  8 10:16:09 PDT 1996
          Updated: Wed Nov 13 16:53:57 PST 1996
          Updated: Tue Nov 26 20:37:41 PST 1996
          Updated: Sun Dec 15 07:57:44 PST 1996

The LPRng software uses a greatly simplified set of printcap
conventions.  This document shows the format as well as some examples
of common printcap files and distribution methods.  LPRng can use
vintage (i.e.- Berkeley LPR) format printcap filess; use the checkpc
program to make sure they are totally compatible with LPRng (see
checkpc man page, README.install, DOC/Intro).

The client programs (LPR, LPRM, LPQ, LPC) do not need
access to a printcap database, but will use it if available.  The
-Pprinter@host option or PRINTER environment variable specifies the
printer and LPD host; the LPD server does all of the various spool
queue activities.  The client programs send requests and/or jobs to the
LDP server which carries out all activity.  If no printcap is available
and the host is not specified,  a default host value is provided.

If a printcap database is desired, then it is obtained as follows.
First, the printcap_path and lpd_printcap_path configuration
information (see lpd.conf(5)) specifies where client and server programs
locate printcap information.  The client programs use printcap_path;
lpd uses both printcap_path and lpd_printcap_path.  All files are read
and the printcap entries are extracted in order from the files.  Later
printcap information overrides previous information in the files.

The common defaults for the printcap locations are:

printcap_path      /etc/printcap:/usr/etc/printcap:\
                       /var/spool/lpd/printcap.HOSTNAME
lpd_printcap_path /etc/lpd_printcap:/usr/etc/lpd_printcap

The most common method of printcap information distribution is to have
a master printcap file shared or distributed to all system.  This usually
has only the printer name and lpd host specified in the printcap entries,
as shown below.

    ----- /etc/printcap on clients and server ------- 
    #parallel attched DUMB printer
    pr1|dumb
        :lp=pr1@taco.sdsu.edu
    # server information
    pr2|postscript
        :lp=pr2@taco.sdsu.edu
    pr3|laserjet
        :lp=pr3@taco.sdsu.edu
	@common|common code for printers
		:if=/bin/filter
		:of=/bin/filter
	@morecommon|show the configuration expansion
		:sd=/var/spool/lpd/%P
		
	realpr:tc=@common:tc=@morecommon

A careful study of the above example will discover the following
features of the LPRng printcap structure.

@name - these entries are 'placeholders' for use with the 'tc='
	function.  Any printer name starting with a punctuation character
    is treated as a placeholder for information.
tc=f1:tc=f2:...
    The tc entries are treated as though they were located at the end
    of the printcap entry.  The printcap entries they reference are
    logically appended to the end of the current printcap.  Note that
    you can have multiple :tc: entries.
key=value.%X
    the %X is expanded when the printcap entry is used by the 
	client or server program.  This allows common information to
    be placed in a dummy printcap entry.  The following keys
    are currently defined; check the Keyletter array in the
    src/vars.c for a complete set for the current release.
    The same keys are used by the configuration file and printcap file.
    Note that this means that a % cannot occur in a printcap value.

The client programs use the lp entry to locate the LPD server host 
and send the appropriate messages to it.

The lpd server needs additional information such as spool directory
location, printer device, etc.  This can be provided in several ways:

MODIFIED OR ADDITIONAL PRINTCAP FILE - 

   Since only the LPD server uses the /etc/lpd_printcap or
   /usr/etc/lpd_printcap file,  you can place server specific
   information there.  On the server,  you might also have a
   modified or extended form of the database.

PRINTCAP OH FIELD

   You can restrict a printcap entry to a specfic host by using the
   'oh=hostname' field.  For example, the distributed or shared
   printcap database could have the following format.

    #parallel attched DUMB printer
    pr1|dumb
        :lp=pr1@taco.sdsu.edu
    # server information
    pr1
        :oh=taco.sdsu.edu
        :sd=/usr/spool/pr1
        :lp=/dev/tty1

    The first pr1 entry would be seen and used by all hosts, and the
    second by the server.  The second lp entry would override the first
    one,  and the LPD server would send jobs to the output device.  The
    lp entry overrides rm and rh entries.  Client programs running on the
    server host would send their requests to the LPD server on the same 
    host.

SPOOL (CONTROL) DIRECTORY PRINTCAP FILE

   You can put a printcap file in a spool queue directory.  This file
   is only consulted by the LPD server when performing operations on
   a spool queue.  It allows you to put information particular to
   a spool queue in well controlled location.

ALL PRINTCAP ENTRY

The 'all' printcap entry is reserved to provide a list of all printers
available for use by the spooling software.  This was intended to be used
with systems that did not have ways to provide a wildcard search of the
printcap database.  The 'all' printcap entry has the form:
  all:all=pr1,pr2,...      <- printer list
The LPRng software will use the individual entries of the printer list
and request additional printcap information if necessary.

PRINTCAP FORMAT AND ENTRIES

The LPRng printcap format is extremely simple, and uses the
following conventions.

1. Lines ending with a \ indicate continuation to the next line.
   In practice,  the \ and following end of line characters are
   replaced with spaces.
2. Blank lines and lines whose first nonwhitespace character
   is a # are ignored.
3. All leading and trailing whitespace on a line are removed.
4. A printcap entry consists of a name, 0 or more aliases, and data entries.
    - name starts with an alphabetic character
    - alias starts with a | followed by the alias
    - data entry starts with : followed by the entry
5. Printcap names starting with punctuation are treated like dummy
	entries.  They can be referenced with :tc=entry:,  but will
	be ignored otherwise.
6. The :tc=name: entry acts like an inclusion facility,
    and performs its action at the END of the current printcap entry.
    You may have multiple :tc=name: entries.

The following printcap entries show the formats,  and have
some additional comments about fields in the printcap file.

# /etc/lpd_printcap - printcap file for server
#
#  NOTE:
#  Use the lpf filter (supplied with LPRng) or the of and if filter.
#  Banners will be printed using the lpbanner
#  program, supplied with LPRng.  You can also create your own banner
#  program and specify it as the banner printer (printcap :bp: entry.)
#  Put -$ at the start of a filter or program specification to suppress
#  additional command line options. (see lpd.conf).
#  Note: some PC's LPR packages use the v format instead of the l or f format
#
# This is the VINTAGE form of printcap,  with trailing \ to extend information
# to next line.  Note the -$ to suppress adding options to command line

# typical dump printer, no banner, parallel port
pr1|dumb- no banner:\
    :sh:lp=/dev/lpr1:sd=/usr/spool/lpd/pr1:\
    :fx=flpv:\
    :af=acct:lf=log:\
    :if=/usr/local/bin/lpf:\
    :vf=-$ /bin/cat

# dumb with banner - note that lprng will use the default banner program
#  /usr/local/bin/lpbanner to generate full banner
# Note: we use the standard LPRng printcap format

pr1b|dumb- banner
    :lp=/dev/lpr1:sd=/usr/spool/lpd/pr1        #<- sh deleted
    :fx=flpv
    :af=acct:lf=log
    :of=/usr/local/bin/lpf
    :if=/usr/local/bin/lpf
    :vf=/usr/local/bin/lpf -c

# common printer information:
# we define a @common entry
@filter|printcap filter information
    :of=/usr/local/bin/lpf
    :if=/usr/local/bin/lpf
    :vf=/usr/local/bin/lpf -c

# dumb with user banner - bp specifies banner printer
#  If we wanted the banner at the END of the job, we would use
#  :hl: (header last) flag.
#  We can also have headers at start and end, using the
#  be={banner printer} and bs={banner printer} overrides
#  Note: -$ suppresses adding command line options

pr1b|dumb- user supplied banner
    :lp=/dev/lpr1:sd=/usr/spool/lpd/pr1
    :fx=flpv
    :af=acct:lf=log
    :bp=/usr/local/lib/my_banner_printer
    :tc=@filter

#serial attached PostScript printer
# Note that fields can have terminating colons (:)
# You can put comments into this printcap with this form
# Note that the of filter does accounting
pr2|postscript - no banner
    :rw:sh:lp=/dev/ttya:sd=/usr/spool/lpd/pr2
    :sy=9600 -echo -crmod -raw -oddp -evenp pass8 cbreak ixon
    :af=acct:lf=log:ps=status
    # only allow the following formats
    :fx=flpv
    # filters
    :tc=@filter

#serial attached PostScript printer with psof created banner
pr2|postscript - psof will expand short banner
    # Note: sb is short banner format
    # psof filter recognizes this and produces a fancy banner
    # from the input
    :rw:sb:lp=/dev/ttya:sd=/usr/spool/lpd/pr2
    :sy=9600 -echo -crmod -raw -oddp -evenp pass8 cbreak ixon
    :af=acct:lf=log:ps=status
    # only allow the following formats
    :fx=flpv
    # filters
	:tc=@filter

#serial attached PostScript printer with user created banner
pr2|postscript - psof will expand short banner
    # Note: sb is short banner format
    # psof filter recognizes this and produces a fancy banner
    # from the input
    :rw:sb:lp=/dev/ttya:sd=/usr/spool/lpd/pr2
    :sy=9600 -echo -crmod -raw -oddp -evenp pass8 cbreak ixon
    :af=acct:lf=log:ps=status
    # only allow the following formats
    :fx=flpv
    # filters
    :tc=@filter

# parallel attched Laser Jet
# Note that fields do not need terminating colons
#
pr3|laserjet
    :rw:sh:lp=/dev/lp:sd=/usr/spool/lpd/pr3
    :af=acct:lf=log:ps=status
    # only allow the following formats
    :fx=flpv
    #filters
    :if=/usr/local/lib/CTI-Print/bin/ifhp -Tstatus=off
    :of=/usr/local/lib/CTI-Print/bin/ofhp -Tstatus=off
    :vf=/usr/local/lib/CTI-Print/bin/ifhp -c -Tstatus=off

# printcap file for pr4
# PostScript via JetDirect card, IP address pr4, port 9100.
# Note: some PC's LPR packages use the v format for their jobs
#
pr4|network
    :rw:sh:lp=pr3%9100:sd=/usr/spool/lpd/pr4
    :af=acct: :lf=log: :ps=status
    # only allow the following formats
    :fx=flpv
    #filters
    :if=/usr/local/lib/CTI-Print/bin/ifhp
    :of=/usr/local/lib/CTI-Print/bin/ofhp
    :vf=/usr/local/lib/CTI-Print/bin/ifhp -c


WARNING FOR PC-NFS Print Spooler USERS

If you are using PC-NFS to do print spooling,  then you have several
security loopholes exposed.  You must modify the permissions on the
spool directory to allow other users to access it and place jobs into
the directory.  Printcap and other control information by default is
placed in the spool directory, and can be easily modified by malicous
users.  To reduce this risk, the :cd: (control directory) entry is used
to specify a directory to hold sensitive control information. For example

#/etc/lpd_printcap
# PCNFS Spooler
#
pr7
    :lp=pr7@printserver
    :bq=pr1@printserver
    :sd=/usr/spool/pcnfs/pr7
    :cd=/usr/spool/lpd/pr7

This printcap entry will implement a simple 'bounce queue',  in which
jobs are stored temporarily and then transferred to another spool queue,
and is the recommended way to support PC-NFS printing.

USING FILTERS TO GET PRINTCAP INFORMATION

If your printcap_path entry has the form |/program, then the LPD
software expects the program to provide printcap information. 
The program is invoked with the standard filter options,
and has the name of the printcap entry provided on stdin.  The filter
should supply the printcap information on stdout and exit with a 0
(success) error code.  By convention,  the printer name 'all'
requests a printcap entry that lists all printers; i.e.-

   LPD sends 'all' to filter - filter responds with:
       all:all=pr1,pr2,pr3
