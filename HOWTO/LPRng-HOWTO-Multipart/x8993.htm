<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org">
    <title>PGP Authentication Support</title>
    <meta name="GENERATOR" content=
    "Modular DocBook HTML Stylesheet Version 1.71 ">
    <link rel="HOME" title=" LPRng-HOWTO" href="index.htm">
    <link rel="UP" title="Permissions and Authentication " href=
    "permsref.htm">
    <link rel="PREVIOUS" title="Permission Checking" href=
    "x8961.htm">
    <link rel="NEXT" title="Using Kerberos 5 for Authentication"
    href="kerberos.htm">
  </head>

  <body class="SECT1" bgcolor="#FFFFFF" text="#000000" link=
  "#0000FF" vlink="#840084" alink="#0000FF">
    <div class="NAVHEADER">
      <table summary="Header navigation table" width="100%" border=
      "0" cellpadding="0" cellspacing="0">
        <tr>
          <th colspan="3" align="center">LPRng-HOWTO: 1 Apr 2002
          (For LPRng-3.8.10)</th>
        </tr>

        <tr>
          <td width="10%" align="left" valign="bottom"><a href=
          "x8961.htm" accesskey="P">Prev</a></td>

          <td width="80%" align="center" valign="bottom">Chapter
          17. Permissions and Authentication</td>

          <td width="10%" align="right" valign="bottom"><a href=
          "kerberos.htm" accesskey="N">Next</a></td>
        </tr>
      </table>
      <hr align="LEFT" width="100%">
    </div>

    <div class="SECT1">
      <h1 class="SECT1"><a name="AEN8993">17.13. PGP Authentication
      Support</a></h1>

      <p>PGP is a well known encryption and authentication program.
      For more details see the web site <a href=
      "http://www.pgp.net" target="_top">http://www.pgp.net</a> or
      the ftp site <a href="ftp://ftp.pgp.net" target=
      "_top">ftp://ftp.pgp.net</a>.</p>

      <p><b class="APPLICATION">LPRng</b> has greatly simplified
      the use of PGP for authentication by building in support as
      follows.</p>

      <ul>
        <li>
          <p>The <tt class="LITERAL">user</tt> and <tt class=
          "LITERAL">group</tt> configuration entry (defaults <tt
          class="LITERAL">daemon</tt> and <tt class=
          "LITERAL">daemon</tt> respectively) specify the user and
          group id used by the <b class="APPLICATION">lpd</b>
          server for file and program execution. PGP uses the
          current user id of the PGP process to determine the
          locations of various configuration files and information.
          In this discussion we will assume that <b class=
          "APPLICATION">lpd</b> runs as uid <tt class=
          "LITERAL">daemon</tt>.</p>
        </li>

        <li>
          <p>By default, the PGP program expects the public and
          secret key rings to be in the <tt class=
          "FILENAME">$HOME/.pgp/</tt> directory to be readable only
          by the user. In order to set up PGP authentication, make
          sure that the <tt class="LITERAL">daemon</tt> account has
          a home directory. Then use the <tt class="LITERAL">su
          daemon</tt> command to change effective UID to daemon and
          run the <tt class="COMMAND">pgp -kg</tt> (generate key)
          command as daemon. The <tt class="LITERAL">daemon</tt>
          user should not have a password.</p>
        </li>

        <li>
          <p>Each PGP key has an associated identifier. It is
          recommended that the <b class="APPLICATION">lpd</b> key
          be <tt class="LITERAL">lpr@hostname</tt>, where hostname
          is the fully qualified domain name of the server. A
          public and a private key file will be created.</p>
        </li>

        <li>
          <p>Next, place the passphrase for the <tt class=
          "LITERAL">daemon</tt> user in <tt class=
          "FILENAME">~daemon/.pgp/serverkey</tt>, and make sure it
          has owner <tt class="LITERAL">daemon</tt> and <tt class=
          "LITERAL">600</tt> permissions (read/write only by <tt
          class="LITERAL">daemon</tt>). This is extremely
          important. If other users can read this file then
          security will be severely compromised.</p>
        </li>

        <li>
          <p>Next, distribute the <tt class=
          "LITERAL">lpr@hostname</tt> public key to all users of
          the <b class="APPLICATION">LPRng</b> server. This is
          usually done by placing the public key in a well known
          file location or making it available to users by some
          form of Public Key Distribution system (PKD). The key can
          be extracted and put into a text file using the following
          commands:</p>

          <div class="INFORMALEXAMPLE">
            <a name="AEN9032"></a>
<pre class="SCREEN">
    pgp -kxa userid destfile keyfile
    
    Example:
    &gt; pgp -kxa lpr@astart /tmp/lprkey ~daemon/.pgp/pubring.pgp
    Key for user ID: lpr@astart
    512-bit key, key ID BB261B89, created 1999/01/01
    
    Transport armor file: /tmp/lprkey.asc
    Key extracted to file '/tmp/lprkey.asc'.
</pre>
          </div>
          <br>
          <br>
        </li>

        <li>
          <p>To allow a user to send files to the server, their
          public key must be put into the <tt class=
          "LITERAL">daemon</tt> public key ring. This can be done
          using:</p>

          <div class="INFORMALEXAMPLE">
            <a name="AEN9037"></a>
<pre class="SCREEN">
    pgp -ka /tmp/lprkey.asc
</pre>
          </div>
          <br>
          <br>
        </li>

        <li>
          <p>Finally, the administrator will need to add users
          public keys to the <tt class="LITERAL">daemon</tt> users
          public key ring. This can most easily be done by copying
          all the keys (in ASCII text form) to a single file (<tt
          class="FILENAME">/tmp/keyfile</tt>)and using:</p>

          <div class="INFORMALEXAMPLE">
            <a name="AEN9043"></a>
<pre class="SCREEN">
    su daemon
    pgp -ka /tmp/keyfile ~daemon/.pgp/pubring.pgp
</pre>
          </div>
          <br>
          <br>
        </li>

        <li>
          <p>If the <b class="APPLICATION">lpd</b> server is using
          PGP to forward jobs or requests, the destination server's
          public key must be put in the originating servers public
          keyring. For example:</p>

          <div class="INFORMALEXAMPLE">
            <a name="AEN9048"></a>
<pre class="SCREEN">
    su daemon
    pgp -ka /tmp/lpd.keyfile ~daemon/.pgp/pubring.pgp
</pre>
          </div>
          <br>
          <br>
        </li>
      </ul>
      <br>
      <br>

      <div class="SECT2">
        <h2 class="SECT2"><a name="PGPPATH">17.13.1. Printcap
        Configuration</a></h2>

        <p>Options used:</p>

        <ul>
          <li>
            <p><tt class="LITERAL">pgp_path=</tt><i class=
            "EMPHASIS">path to PGP program</i></p>
          </li>

          <li>
            <p><tt class="LITERAL">pgp_id=</tt><i class=
            "EMPHASIS">destination server key used by
            clients</i></p>
          </li>

          <li>
            <p><tt class="LITERAL">pgp_forward_id=</tt><i class=
            "EMPHASIS">destination server used by server</i></p>
          </li>

          <li>
            <p><tt class="LITERAL">pgp_server_key=</tt><i class=
            "EMPHASIS">path to server passphrase file</i></p>
          </li>
        </ul>
        <br>
        <br>

        <p>Example printcap entry:</p>

        <div class="INFORMALEXAMPLE">
          <a name="AEN9071"></a>
<pre class="SCREEN">
    pr:
        :lp=pr@wayoff
        :auth=pgp
        :pgp_id=lpr@wayoff.com
        :pgp_path=/usr/local/bin/pgp
    pr:server
        :lp=pr@faroff
        :auth_forward=pgp
        :pgp_id=lpr@wayoff.com
        :pgp_path=/usr/bin/pgp
        :pgp_forward_id=lpr@faroff.com
</pre>
        </div>
        <br>
        <br>

        <p>The <tt class="LITERAL">pgp_path</tt> value is the path
        to the PGP program. The program must be executable by all
        users.</p>

        <p>The <tt class="LITERAL">pgp_id</tt> value is the id used
        by PGP to look extract keys from key rings. When doing a
        client to server transfer this will be supplied as the id
        to be used for the destination, and the user's public
        keyring will be checked for a key corresponding to this id.
        When a request arrives at the server, the server will use
        this value as the id of a key in its private key ring.
        Finally, when a server is forwarding a request to a remote
        server, it will use this value as the id of the key in its
        private key ring to be used to sign or encode the
        destination information.</p>

        <p>The <tt class="LITERAL">pgp_forward_id</tt> value is
        used by the <b class="APPLICATION">lpd</b> server as the id
        to use to find a key for the destination.</p>

        <p>The <tt class="LITERAL">pgp_server_key</tt> is the path
        to the file containing the server passphrase. This file
        will be read by <b class="APPLICATION">lpd</b> to get the
        passphrase to unlock the server's keyring.</p>
      </div>

      <div class="SECT2">
        <h2 class="SECT2"><a name="AEN9083">17.13.2. User Files and
        Environment Variables</a></h2>

        <p>Options used:</p>

        <ul>
          <li>
            <p><tt class="LITERAL">PGPPASSFILE=</tt><i class=
            "EMPHASIS">File to read PGP passphrase from</i></p>
          </li>

          <li>
            <p><tt class="LITERAL">PGPPASSFD=</tt><i class=
            "EMPHASIS">File descriptor to read PGP passphrase
            from</i></p>
          </li>

          <li>
            <p><tt class="LITERAL">PGPPASS=</tt><i class=
            "EMPHASIS">PGP passphrase</i></p>
          </li>
        </ul>
        <br>
        <br>

        <p>One problem with using PGP is the need to have users
        input their passphrases. The following methods can be
        used.</p>

        <ul>
          <li>
            <p>Put the passphrase in a file, say <tt class=
            "FILENAME">$(HOME)/.pgp/.hidden</tt>, and set the <span
            class="ACRONYM">PGPPASSFILE</span> environment variable
            to the file name. This file will be opened and read by
            PGP to get the passphrase. This file should be owned by
            the user and have <tt class="LITERAL">0600</tt> or
            read/write only by user permissions.</p>
          </li>

          <li>
            <p>A more subtle solution is to use the <span class=
            "ACRONYM">PGPPASSFD</span> environment variable
            facility. This causes PGP to read the passphrase from a
            file descriptor. If the user puts his passphrase in a
            file, say <tt class=
            "FILENAME">$(HOME)/.pgp/.hidden</tt>, then the
            following shell script can be used:</p>

            <div class="INFORMALEXAMPLE">
              <a name="AEN9110"></a>
<pre class="SCREEN">
    #!/bin/sh
    #  /usr/local/bin/pgplpr script - passphrase in $(HOME)/.pgp/.hidden
    #
    PGPASSFD=3 3&lt;$(HOME)/.pgp/.hidden lpr "$@"
</pre>
            </div>
            <br>
            <br>
          </li>

          <li>
            <p>The least desirable method is to put the passphrase
            in the <span class="ACRONYM">PGPPASS</span> environment
            variable. Since the <tt class="LITERAL">ps</tt> command
            can be used to list the environment variables of
            processes, this is highly undesirable and should not be
            used under any circumstances.</p>
          </li>
        </ul>
        <br>
        <br>
      </div>
    </div>

    <div class="NAVFOOTER">
      <hr align="LEFT" width="100%">

      <table summary="Footer navigation table" width="100%" border=
      "0" cellpadding="0" cellspacing="0">
        <tr>
          <td width="33%" align="left" valign="top"><a href=
          "x8961.htm" accesskey="P">Prev</a></td>

          <td width="34%" align="center" valign="top"><a href=
          "index.htm" accesskey="H">Home</a></td>

          <td width="33%" align="right" valign="top"><a href=
          "kerberos.htm" accesskey="N">Next</a></td>
        </tr>

        <tr>
          <td width="33%" align="left" valign="top">Permission
          Checking</td>

          <td width="34%" align="center" valign="top"><a href=
          "permsref.htm" accesskey="U">Up</a></td>

          <td width="33%" align="right" valign="top">Using Kerberos
          5 for Authentication</td>
        </tr>
      </table>
    </div>
  </body>
</html>

