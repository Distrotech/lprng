         Bounce Queues
     LPRng-2.2.5 and Later
Original Mon Apr 22 09:05:58 PDT 1996
Updated Tue Jun  4 14:21:11 PDT 1996
Updated Sun Sep  8 08:34:32 PDT 1996
Updated Sun Jan 26 13:17:28 PST 1997
Updated Tue Jan 28 08:23:15 PST 1997
Updated Sat Feb 15 06:43:55 PST 1997

       Patrick Powell

A bounce queue is a special spool queue that will pass
all submitted jobs through a filter before sending the
job to the final destination.  This activity is controlled
by the :bq=destination: printcap flag.  In order to
have this work successfully,  the following guidelines
should be followed.

1. The printcap lp or rm/rp entries must specify the
   queue and host where processing is done, or the printcap
   must have the :lpr_bounce: flag set to force LPR to do
   filtering of jobs.
2. The printcap entry for the queue where filtering is done
   must have the the :bq=destination: specify where
   the processed job is sent.
3. If you need to change the format of data files,
   use the :translate_format: printcap entry.  This consists
   of from/to pairs of formats. Note that 'l' or literal
   format should not have any further filtering performed.
4. When you MUST modify the control file in order to make it
   compatble with some system,  see the 'Control filter' topic below.
5. The :server: printcap tag allows you to separate printcap
   information used only by LPD servers from client information.
   This can be used to great benefit as shown below.

Examples:

# seen by client - lpr, lpq, etc and server lpd
bqprinter:
    :lp=bqprinter@host
	# you should put other flags here that are common to
	# server and client processing

# seen only by server lpd
bqprinter:
    :server
    :bq=finalprinter@host
    :sd=/usr/spool/bqprinter
    :if=/usr/filter_for_f_format

multifmt|1up|2up|landscape|normal
    :qq
    :lp=multifmt@host

# seen only by server lpd
multifmt
    :server
    :bq=finalprinter@host
    :sd=/usr/spool/multifmt
    :if=/usr/filter_for_f_format
    # m -> f or 'DEfAULT format'
    # p -> l or 'lITERAL (binary) format'
    :translate_format=mfpl
    :pf=/usr/filter_for_pr
    :mf=/usr/filter_for_m_format

Note: only formats for which you have a filter will
be filtered - there is no default filter.

Multiple Formats

The :qq: (use queuename) printcap flag or use_queuename configuration variable
can be used to provide the original name of the queue to filters.
For example,  suppose that you wanted to format output
in several different ways - 1up, 2up, landscape, normal.  The above
printcap entry will cause LPR to put the original queue name into the
job file.  The bounce queue filter can then use the name to reformat the
job file appropriately.  For example, if you use:
   lpr -P1up ...
Then the control file generated will have the line:
   Q1up
in it.  When the if filter is invoked, it will be invoked with:
 /usr/filter_for_f_format .... -Q1up
The -Q flag can be examined and used to do various types of format
conversion.

Changing Formats

Once a job has been processed,  the actual format of the data files may
be changed.  The 'translate_format' option can be used to specify a new
format before sending the job to the destination.  The option has the form
SdSd... where S is the original format and d is the new format.  The
value mfpf will rename formats m and p as format f.

Bounce Queues and the lpr -p option

The lpr -p option specifies that the print job will be passed
to /bin/pr (actually, a program specified by the :pr: printcap entry)
and then filtered by the :if: filter.  When using bounce queues,
this is not done.  If you want to have print jobs filtered,  then
you can use a :pf: specification for a print filter. If you use this,
then you should also use the 'translate_format' option to rename the
format of the file as well.  Note that the pf filter will need to
do both /bin/pr formatting as well as the f format filtering.

Bounce Queues and the 'lpr_bounce' option

You can cause LPR to do the bounce queue filtering by enabling the
:lpr_bounce: flag in the printcap for the printer.  This is useful
when you want to send directly to a server,  and do not want
to have to have a server do filtering.

When this flag is set,  the LPR job will check for filters and use
them.  This can cause unexpected results when used on systems that
do not have filters in the appropriate locations.

Control filter

There are times when you simply must reformat the control file
before sending to a remote printer.  The 'control_filter' printcap
option specifies that the control file be passed through
a filter.  The output from the filter is used as the actual control file.
Note that no checks for correctness are performed on this output.

The exit status of the filter is used to control further processing as well.
If the status is JSUCC, processing proceeds normally;
JABORT will terminate processing, JREMOVE will remove the job,
JFAIL will indicate job failure.  Any other status will be treated
as JFAIL.
