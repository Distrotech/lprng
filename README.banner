           From The CTI-ifhp Filter Package

               BANNER PRINTING

          Original: Wed Jan  3 07:12:57 PST 1996
           Updated: Thu Nov 14 09:00:15 PST 1996
                Patrick Powell

While this addresses using the CTI filters with banner printing,
note that the same concepts can be applied in general.

The CTI-ifhp filters  were designed to work with several different
versions of LPD servers.  Thus,  they have a wide range of options and
configurations.  One of the most confusing is the way that banner
printing is done.  Here is a brief review. In addition, the various
banner formats produced by banner are covered.

1. To disable banner printing by the LPD server, the :sh:
   (suppress header) entry is used.  In these circumstances,
   no banner is generated by the LPD server.
   :sh@:  - (default) produce banner
   :sh:   - no banner

2. The LPD server uses the printcap :sb: (short banner)
   entry to decide if to produce a 'full' banner
	:sb@: - (default) LPD generates a banner
            This invokes the banner generation program,
			which can be specified by the :bp: entry.
            The usual entry on this is to put in the printcap
			:bp=/usr/local/lib/lpbanner:
            The lpbanner program produces output of the form:

              ******            
              * user name ...
              * date ....
              *
              * ....
              *******
              *******
             Note that this is a text format, and the dimensions
			 are set by the printcap :pl: and :pw: entries.
    
	:sb:  -> short (single line) banner
             format specified by the :bl: (banner line) printcap entry
             whose default value is :bl=$-'C:$-'n Job: $-'J Date: $-'t
			 This produces the banner line:

               class:user  Job: job title  Date: date

        See LPRng printcap.5 documentation for details.  Briefly:
       $X - gets the X field value from control file: "-Xvalue"
       $'X - no quotes:    -Xvalue
       $-'X - no hyphen and key as well:  value

3. There are two types of 'of' filters - those that
   pass all output to the device,  and those that trap 'short banner'
   lines and tranformed them into 'pretty banner pages'.

   By default, ifhp/ofhp will simply pass through all text, and ignore
   the contents.  In order to make it treat the FIRST LINE sent to
   it as a banner, you must use the -Tbanner flag.

A: LPRng generates TEXT banners, OFHP simply passes them through:
    :of=/usr/local/lib/CTI-print/ofhp
    :bp=/usr/local/bin/lpbanner   (or wherever lpbanner is installed)

B: LPRng generates short banner, OFHP generates banner:
    :of=/usr/local/lib/CTI-print/ofhp -Tbanner
    :sb:
    :bl=$-'C:$-'n Job: $-'J Date: $-'t    (this is default)

C: LPRng does NOT generate an banners, no banner generation wanted

    :of=/usr/local/lib/CTI-print/ofhp
    :sh:

4.  The ifhp program generates a PCL based banner;  this is sent to
    the printer before any job information is sent.  Note that banner
    printing is done in PCL mode.  This means that if you try to print
	a postscript job, using banners generated by ofhp and do not
    specify an if filter then the job will be sent to the printer
    which is now in PCL mode.  Your postscript job will be printed
    as plain text.

5.  If you want to have much more fancy banners,  then I recommend that
    you examine the banner printing script banner.sh and psbanner.sh
	scripts in the CTI-ifhp distribution.
    These can generate PCL or PostScript banner pages,
    which can be sent to the printer using 'ofhp' in passthrough
    mode.

    You would use these by the following printcap entry:
    :of=/usr/local/lib/CTI-print/ofhp
    :bp=/usr/local/lib/CTI-print/banner.sh   (or wherever banner.sh is installed)
       or:
    :bp=/usr/local/lib/CTI-print/psbanner.sh   (or wherever psbanner.sh is installed)
