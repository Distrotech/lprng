The new build system was tested on:

Linux (Debian 4.0)
SunOS 5.10

The following is a list of the systems that LPRng had once been ported
to. Since then quite a bit changed in the build system, and noone has
reported any tests since:

Sun Microsystems: SunOS 4.1.1, 4.1.3U, 4.1.4
     Solaris/SunOS  2.2/5.2, 2.3/5.3, 2.4/5.4
     Solaris 2.5, 2.5.1, 2.6, 2.7, 2.8
BSDI (BSD/OS): BSDI 2.0.0, 2.0.1, 2.1.0, 3.0, 3.1,
   4.0, 4.1, 4.1.1
HPUX: 8.2, 9.4, 10.X, 11.X
	Note: with HP's C compiler, please try:
      configure CFLAGS=-Ae
    or
      configure CFLAGS=-Aa
    for ANSI compatibilty.
    Additionally you might want to set CPPFLAGS="-D_HPUXSOURCE=1"
    when calling configure.
    Older versions had on HPUX<110 the value of NONBLOCK in
    src/include/portable.h set to (O_NONBLOCK) instead of
    (O_NDELAY|O_NONBLOCK). If you have such a machine, hints
    on why this was needed would be nice, so we can readd this
    without the expensive system-detection code.
SGI:  IRIX5, IRIX6, IRIX7
	Note: use ANSII C compiler,  gcc is preferred
	you might want to add -DIRIX=yourversion to CPPFLAGS
	and -DHAVE_BROKEN_TIOCEXCL=1 on irix5
Linux:  All Linux system generated after 1998.
	Note: should run on Linux with no problems
DEC:     ULTRIX, DEC Alpha
	Note: use GCC
	adding -DAES_SOURCE might help on osf*
AIX:     1.06
    See LPRng Refernce Manual for detailed instructions
	Note: use GCC
FreeBSD: 2.0.5, 2.x, 3.x, 4.x, 5.x

POSIX Compatible Systems:
   If your system is POSIX compatible,  then there should
   be few,  if any,  problems.   Warnings and error messages
   about conflicting pointer types are usually the result
   of conflicts between LPRng and system default implementations
   of some functions.  Check these carefully.

Note:
Some systems appear to have conflicts in function definitions in
different include files.  This is the target SYSTEMS fault,
not LPRng's.

Great effort has been made to accommodate these systems and to not
include conflicting files by using the "configure" facility.  To
make life worse,  these conflicts may appear in one version and
get fixed in the next. This has led to the use of "configure" and
the need to detect not only the operating system, but also the
version of various libraries and functions.  See the #if statements
in various files, i.e. - stty.c is a good example of insanity.
