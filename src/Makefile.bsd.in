########################################################################
# LPRng - An Extended Print Spooler System
#
# Copyright 1988-1997 Patrick Powell, San Diego, California
#     papowell@sdsu.edu
# See LICENSE for conditions of use.
#
###########################################################################
# MODULE: Makefile
# $Id: Makefile.bsd.in,v 1.15 1997/03/24 00:45:58 papowell Exp papowell $
###########################################################################
#
# WARNING: This is a makefile for GNU Make or when modified by BSD Make
# the appropriate install script.
# GNU Make uses VPATH and replacement facilities
# BSD Make uses .PATH and replacement facilities

#************** GENERAL CONFIGURATION INFORMATION ************************
# where user commands are installed: lpr, lpq, lprm, lpc.
# Also the SysV emulation commands: lp, lpstat.
# If these paths are /usr/lib, /usr/ucb etc., make sure you
# have backup copies of the system version!
#
#
# These are automatically sedded in by the "configure" script, but you
# may need to change them if you're on a strange version of UNIX.

# any libs that need to be used to get these programs to compile:
#
LIBS=@LIBS@
# LIBS=-lposix -s       # (on A/UX, if the above doesn't work)


# what command to use to "ranlib" or "lorder" the library.
#
RANLIB=@RANLIB@

# the compiler optimisation/debugging flags you wish to use.
#
# what C compiler to use.
#
CC=@CC@

# what C preprocessor to use.
#
CPP=@CPP@ $(CCOPTFLAGS)

# how to install stuff.
#
INSTALLCMD=@INSTALL@

# a shell interpreter that's as close to the POSIX shell as possible.
#
SHELL_PATH=@SHELL@
SHELL = @SHELL@

SRC=@srcdir@
@SET_MAKE@
LDCC=@LDCC@

# where executables are installed
prefix=@prefix@
exec_prefix=@exec_prefix@
localedir = $(prefix)/@DATADIRNAME@/locale
INSTALL_BIN =     @exec_prefix@/bin
# where daemons are installed: lpd
#INSTALL_LIB =     @prefix@/lib
INSTALL_LIB =     @prefix@/bin
# where maintenance commands are installed: checkpc, setstatus
INSTALL_MAINT =   @exec_prefix@/bin

CF := @CFLAGS@ @DEFS@ -DLOCALEDIR=\"$(localedir)\"

#********************** End of configure modifiable settings ************

#********************** OPTIONAL DEFINITIONS ****************************
# These are various flags and settings that will be used by the
# compiler to generate code
#

#### ****** TESTING AND SECURITY LOOPHOLE ******************************
# Define TESTVERSION and GETENV to allow the LPD_CONFIG environment
#  variable to be used as the name of a configuration file.  In non-testing
#  systems,  this is a security loophole.
#TESTVERSION=yes
.ifdef TESTVERSION
GETENV_CFLAGS = -DGETENV
.endif

# the compiler optimisation/debugging flags you wish to use.
# These are in addition to the CCFLAGS and LDFLAGS
CCOPTFLAGS =
LDFLAGS    := -g $(LDFLAGS)

#********************* OVERRIDING CONFIGURES' GUESSES ******************
#
#
# If you get errors similar to the ones below, it may be
# because "configure" guessed wrong. You can override the
# guesses here, by uncommenting the appropriate line...

# "recvfiles.c: unknown struct fsb has no size":
# define STATFS: to use statfs(2) (BSD)
#        STATVFS: to use statvfs(2) (SVR4)
#     others for system specific cases
#
# STATFS_CFLAGS= -DMAKE_USE_STATFS=ULTRIX_STATFS
# STATFS_CFLAGS= -DMAKE_USE_STATFS=SVR3_STATFS
# STATFS_CFLAGS= -DMAKE_USE_STATFS=STATVFS
# STATFS_CFLAGS= -DMAKE_USE_STATFS=STATFS

# define MAKE_USE_STTY = 
#    SGTTYB   to use struct sgttyb and <sgtty.h> (BSD)
#    TERMIO  to use struct termio and <termio.h> (old sysV)
#    TERMIOS to use struct termios and <termio.h> (SVR4)
#
# STTY_CFLAGS= -DMAKE_USE_STTY=SGTTYB
# STTY_CFLAGS= -DMAKE_USE_STTY=TERMIO
# STTY_CFLAGS= -DMAKE_USE_STTY=TERMIOS

# a better way to do this is to edit the "ARGH" section of portable.h,
# and add the appropriate lines to the section for your OS, or add a new
# section if one doesn't exist; then you can send me the patches and
# I'll incorporate them into the distribution.

#
# Try using this if you do not have rw_sockets or the rw_socket test failes
# RWSOCKETS_CFLAGS= -DUSE_RWSOCKETS

#
# You might discover that the default locking mechanism
# does not work.  Try one of the following to override the
# configured value: fcntl(), lockf(), flock(), and 0 to suppress locking
#
# LOCK_DEVS_CFLAGS=-DLOCK_DEVS=devlock_fcntl
# LOCK_DEVS_CFLAGS=-DLOCK_DEVS=devlock_lockf
# LOCK_DEVS_CFLAGS=-DLOCK_DEVS=devlock_flock
# LOCK_DEVS_CFLAGS=-DLOCK_DEVS=0
#

# SETPROCTITLE - overwrites the program argument information
#   when ps is used, displays status.  Used only by LPD
# if this does not work, define the following

# SETPROCTITLE_CFLAGS=-DNO_SETPROCTITLE

# Long or short LPQ status format
# if you want to have a 5-6 line status format,  then undefine the
# following:
# LONG_STATUS_FORMAT=-DLONG_STATUS_FORMAT

#######
#
#  Running filters with full root perms 
# This is a security loophole - are you sure you want to do this?
# You can guess at my opinion by the name of the option.
#
# ROOT_CFLAG=-DROOT_PERMS_TO_FILTER_SECURITY_LOOPHOLE


#**********************  End of Configurable Part ****************************
#**************************** SYSTEM DEPENDENCIES **************************

TARGET= \
		authenticate_pgp readfilecount removeoneline setupauth \
		liblpr.a checkpc lpr lpd lpq lprm lpc lpbanner \
		lpf lpraccnt monitor lp cancel lpstat
NONTARGET = sserver sclient testauth


SRCDIRS=${SRC}/common ${SRC}/LPD ${SRC}/LPQ ${SRC}/LPR \
	${SRC}/LPRM ${SRC}/LPC ${SRC}/CHECKPC ${SRC}/LPBANNER ${SRC}/LPF \
	${SRC}/LPRACCNT ${SRC}/MONITOR ${SRC}/AUTHENTICATE
INCLUDE=.. ${SRC}/include
EXTRA=${SRC}/TESTSUPPORT ${SRC}/UTILS

.PATH: $(INCLUDE) $(SRCDIRS)
INCS= $(INCLUDE:S/^/-I/g)

CFLAGS := $(CF) $(CCOPTFLAGS) -DHAVE_CONFIG_H $(INCS) \
	${GETENV_CFLAGS} $(STTY_CFLAGS) $(STATFS_CFLAGS) $(RWSOCKETS_CFLAGS) \
	$(LOCK_DEVS_CFLAGS) $(SETPROCTITLE_CFLAGS) $(LONG_STATUS_FORMAT) \
	$(ROOT_CFLAG)

LIBLPR_OBJS = \
	bsd-compat.o checkremote.o cleantext.o controlword.o \
	copyright.o decodestatus.o default.o dump.o \
	errormsg.o fileopen.o fixcontrol.o freespace.o \
	getcnfginfo.o gethostinfo.o getopt.o getparms.o \
	getprinter.o getqueue.o getuserinfo.o globmatch.o inet_ntop.o \
	initialize.o jobcontrol.o killchild.o krb5_auth.o krb5_sendauth.o link_support.o \
	lockfile.o malloclist.o merge.o parse_debug.o \
	pathname.o patselect.o permissions.o pr_support.o \
	printcap.o printjob.o proctitle.o readstatus.o \
	removejob.o rw_pipe.o sendauth.o sendjob.o \
	sendlpc.o sendlprm.o sendlpq.o serverpid.o \
	setstatus.o setuid.o setup_filter.o setupprinter.o \
	snprintf.o spoolcontrol.o stty.o termclear.o \
	timeout.o utilities.o vars.o waitchild.o

LPD_OBJS= lpd.o \
	lpd_getparms.o lpd_rcvjob.o lpd_secure.o lpd_status.o lpd_jobs.o \
	lpd_sendmail.o lpd_remove.o lpd_control.o

LPR_OBJS= lpr.o lpr_getparms.o \
	lpr_chkparms.o lpr_cpyfiles.o lpr_makejob.o

LPQ_OBJS= lpq.o lpq_getparms.o

LPRM_OBJS= lprm.o lprm_getparm.o

LPC_OBJS= lpc.o lpc_getparms.o

CHECKPC_OBJS = checkpc.o checkpc_perm.o checkpc_port.o

LPBANNER_OBJS = lpbanner.o lpbanner_prn.o \
	lpbanner_fnt.o

LPF_OBJS = lpf.o

LPRACCNT_OBJS= lpraccnt.o

MONITOR_OBJS= monitor.o getopt.o

all: $(TARGET)

.PHONY: all ci clean \
	uninstall realclean mostlyclean distclean \
	TAGS info

# we want to force default.o to be updated whenever we
# change the options in Makefile or Makefile.bsd
default.o: Makefile.bsd

#
# use RANLIB with no ordering, or lorder/tsort if it is there
# if you do not have either, fall back and just build archive
# This appears to cover all cases for portability
#

liblpr.a: $(LIBLPR_OBJS)
	ar ruv $@ $(LIBLPR_ORDER)
	$(RANLIB) $@

lpr: $(LPR_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lpd: $(LPD_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lpq: $(LPQ_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lprm: $(LPRM_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lpc: $(LPC_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
checkpc: $(CHECKPC_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lpbanner: $(LPBANNER_OBJS)
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lpf: $(LPF_OBJS)
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
lpraccnt: $(LPRACCNT_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
monitor: $(MONITOR_OBJS)
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
readfilecount: readfilecount.o
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
removeoneline: removeoneline.o
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
setupauth: setupauth.o
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)

authenticate_pgp: authenticate_pgp.sh
	rm -f $@; cp $> $@; chmod 555 $@

#ptest: common/snprintf.c
#	$(LDCC) $(CFLAGS) -DTEST -o ptest common/snprintf.c

sserver: sserver.o liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)
sclient: sclient.o liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $> $(LIBS)

cancel:
	rm -f $@; ln -s lprm $@ 
lpstat:
	rm -f $@; ln -s lpq $@ 
lp:
	rm -f $@; ln -s lpr $@

###########################################################################
# 
NORM_PERMS=      0755
SUID_ROOT_PERMS= 04755 -o root
PERMS=$(NORM_PERMS)
#PERMS=$(SUID_ROOT_PERMS)
###########################################################################

install: all ${INSTALL_LIB} ${INSTALL_BIN} ${INSTALL_MAINT}
	${INSTALLCMD} -m $(PERMS) lpq ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lprm ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lpr ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lpc ${INSTALL_MAINT}
	${INSTALLCMD} -m $(NORM_PERMS) lpd ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) lpf ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) lpbanner ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) checkpc ${INSTALL_MAINT}
	${INSTALLCMD} -m $(NORM_PERMS) lpraccnt ${INSTALL_MAINT}
	${INSTALLCMD} -m $(NORM_PERMS) readfilecount ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) removeoneline ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) authenticate_pgp ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) setupauth ${INSTALL_LIB}
	rm -f ${INSTALL_BIN}/lp;     ln -s lpr  ${INSTALL_BIN}/lp;
	rm -f ${INSTALL_BIN}/lpstat; ln -s lpq  ${INSTALL_BIN}/lpstat;
	rm -f ${INSTALL_BIN}/cancel; ln -s lprm ${INSTALL_BIN}/cancel;

${INSTALL_LIB}::
	${SRC}/mkinstalldirs $@
${INSTALL_BIN}::
	${SRC}/mkinstalldirs $@
${INSTALL_MAINT}::
	${SRC}/mkinstalldirs $@


uninstall:
	rm -f ${INSTALL_LIB}/lpd
	rm -f ${INSTALL_LIB}/lpf
	rm -f ${INSTALL_LIB}/lpbanner
	rm -f ${INSTALL_BIN}/lpq
	rm -f ${INSTALL_BIN}/lprm
	rm -f ${INSTALL_BIN}/lpr
	rm -f ${INSTALL_MAINT}/lpc
	rm -f ${INSTALL_MAINT}/checkpc


###########################################################################


clean::
	-rm -f *.o *.core ? core $(TARGET) $(NONTARGET)

realclean mostlyclean distclean:: clean
	-rm -f Makefile Makefile.bsd tags

info:
tags TAGS:
	ctags -t -d common/*.c include/*.h LPC/*.c LPD/*.c \
		LPQ/*.c LPR/*.c LPRM/*.c

###########################################################################

cifiles:
	if [ ! -d RCS ] ; then mkdir RCS ; fi ;
	checkin() { \
		echo $$1 ; \
		ci $(CI) -l -mUpdate -t-Initial $$1; \
	}; \
	for i in *; do \
		if [ -f "$$i" ] ; then \
			case $$i in \
				Makefile*|*install* ) echo $$i; checkin $$i ;; \
			esac; \
		fi; \
	done;

ci: cifiles
	checkin() { \
		echo $$1 ; \
		ci $(CI) -l -mUpdate -t-Initial $$1; \
	}; \
	for i in *; do \
		if [ -d "$$i" ] ; then \
			case $$i in \
			RCS ) ;; \
			* ) if [ ! -d $$i/RCS ] ; then mkdir $$i/RCS ; fi ; \
				for j in $$i/*; do \
					if [ -f "$$j" ] ; then \
						checkin $$j; \
					fi; \
				done; \
				;; \
			esac; \
		fi; \
	done;

depend: /tmp/dep /tmp/order
	( sed -n '1,/^##.*GENERATED/p' ${SRC}/Makefile.in; \
		echo ; echo; \
	echo "########### LIBRARY ORDER #########"; \
	cat /tmp/order; \
	echo ; echo; \
	echo "########### DEPENDENCIES #########"; \
	cat /tmp/dep; ) >/tmp/Makefile.in
	cp ${SRC}/Makefile.in ${SRC}/Makefile.in.old
	cp /tmp/Makefile.in ${SRC}/Makefile.in


/tmp/dep: *.o
	${SRC}/../UTILS/makeinc $> >$@

# make the order in which library files should be loader
# this requires hand tuning the makefile, but it is easier than
# trying to fix up things with conditional tests
#
/tmp/order: $(LIBLPR_OBJS)
	lorder $> |tsort >/tmp/raw
	awk '\
		BEGIN { print "LIBLPR_ORDER = \\"; } \
		{ line = line " " $$0;            \
			if( ++i >= 4 ){               \
				print "\t" line "\\";    \
				line = "";               \
				i = 0;                   \
			}                            \
		}                                \
		END {                            \
			if( line != "" ){            \
				print "\t" line;         \
			}                            \
		}' /tmp/raw >/tmp/order
    
###########################################################################

############# GENERATED ###################################################


########### LIBRARY ORDER #########
LIBLPR_ORDER = \
	 termclear.o setupprinter.o serverpid.o sendlpq.o\
	 sendlprm.o sendlpc.o sendjob.o sendauth.o\
	 removejob.o readstatus.o proctitle.o printjob.o\
	 pr_support.o permissions.o patselect.o parse_debug.o\
	 krb5_auth.o initialize.o getuserinfo.o getqueue.o\
	 getprinter.o getparms.o getopt.o getcnfginfo.o\
	 freespace.o fixcontrol.o controlword.o checkremote.o\
	 stty.o spoolcontrol.o krb5_sendauth.o waitchild.o\
	 utilities.o timeout.o setup_filter.o rw_pipe.o\
	 printcap.o merge.o jobcontrol.o globmatch.o\
	 default.o cleantext.o vars.o copyright.o\
	 setuid.o setstatus.o link_support.o gethostinfo.o\
	 dump.o inet_ntop.o malloclist.o lockfile.o\
	 fileopen.o pathname.o killchild.o decodestatus.o\
	 errormsg.o snprintf.o bsd-compat.o


########### DEPENDENCIES #########
bsd-compat.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
checkpc.o :	config.h bsd-compat.h checkpc_perm.h debug.h dump.h errormsg.h fileopen.h getcnfginfo.h getqueue.h initialize.h lp.h patchlevel.h pathname.h permission.h portable.h printcap.h removejob.h setuid.h setupprinter.h timeout.h utilities.h 
checkpc_perm.o :	config.h bsd-compat.h checkpc_perm.h debug.h errormsg.h lp.h pathname.h portable.h setuid.h utilities.h 
checkpc_port.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h freespace.h killchild.h lockfile.h lp.h pathname.h portable.h rw_pipe.h setuid.h stty.h timeout.h utilities.h waitchild.h 
checkremote.o :	config.h bsd-compat.h checkremote.h debug.h errormsg.h gethostinfo.h lp.h portable.h printcap.h utilities.h 
cleantext.o :	config.h bsd-compat.h cleantext.h debug.h errormsg.h lp.h portable.h utilities.h 
controlword.o :	config.h bsd-compat.h control.h debug.h errormsg.h lp.h portable.h utilities.h 
copyright.o :	config.h bsd-compat.h debug.h errormsg.h lp.h patchlevel.h portable.h utilities.h 
decodestatus.o :	config.h bsd-compat.h debug.h decodestatus.h errorcodes.h errormsg.h lp.h portable.h utilities.h 
default.o :	
dump.o :	config.h bsd-compat.h debug.h dump.h errormsg.h lp.h portable.h utilities.h 
errormsg.o :	config.h bsd-compat.h debug.h errormsg.h killchild.h lp.h portable.h setstatus.h utilities.h 
fileopen.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h fileopen.h killchild.h lockfile.h lp.h pathname.h portable.h timeout.h utilities.h waitchild.h 
fixcontrol.o :	config.h bsd-compat.h cleantext.h debug.h dump.h errormsg.h fixcontrol.h lp.h malloclist.h merge.h portable.h utilities.h 
freespace.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h freespace.h lp.h pathname.h portable.h utilities.h 
getcnfginfo.o :	config.h bsd-compat.h debug.h dump.h errormsg.h fileopen.h getcnfginfo.h lp.h malloclist.h merge.h portable.h printcap.h utilities.h 
gethostinfo.o :	config.h bsd-compat.h debug.h dump.h errormsg.h gethostinfo.h lp.h malloclist.h portable.h utilities.h 
getopt.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
getparms.o :	config.h bsd-compat.h debug.h errormsg.h getparms.h lp.h portable.h utilities.h 
getprinter.o :	config.h bsd-compat.h checkremote.h debug.h dump.h errormsg.h getprinter.h lp.h portable.h printcap.h utilities.h 
getqueue.o :	config.h bsd-compat.h cleantext.h debug.h dump.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getqueue.h globmatch.h jobcontrol.h lp.h malloclist.h merge.h pathname.h permission.h portable.h utilities.h 
getuserinfo.o :	config.h bsd-compat.h debug.h errormsg.h getuserinfo.h lp.h portable.h setuid.h utilities.h 
globmatch.o :	config.h bsd-compat.h debug.h errormsg.h globmatch.h lp.h portable.h utilities.h 
inet_ntop.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
initialize.o :	config.h bsd-compat.h debug.h dump.h errormsg.h fileopen.h getcnfginfo.h gethostinfo.h getuserinfo.h initialize.h killchild.h lp.h portable.h printcap.h setuid.h utilities.h waitchild.h 
jobcontrol.o :	config.h bsd-compat.h debug.h decodestatus.h dump.h errorcodes.h errormsg.h jobcontrol.h lockfile.h lp.h malloclist.h pathname.h portable.h pr_support.h setup_filter.h utilities.h 
killchild.o :	config.h bsd-compat.h debug.h decodestatus.h errormsg.h killchild.h lp.h malloclist.h portable.h utilities.h 
krb5_auth.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h killchild.h krb5_auth.h lp.h portable.h utilities.h 
krb5_sendauth.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
link_support.o :	config.h bsd-compat.h debug.h errormsg.h gethostinfo.h linksupport.h lp.h portable.h setuid.h timeout.h utilities.h 
lockfile.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h lockfile.h lp.h portable.h utilities.h 
lpbanner.o :	lpbanner.h 
lpbanner_fnt.o :	lpbanner.h 
lpbanner_prn.o :	lpbanner.h 
lpc.o :	config.h bsd-compat.h control.h debug.h decodestatus.h errormsg.h getprinter.h initialize.h killchild.h lp.h portable.h sendlpc.h setuid.h utilities.h waitchild.h 
lpc_getparms.o :	config.h bsd-compat.h debug.h errormsg.h lp.h patchlevel.h portable.h utilities.h 
lpd.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h gethostinfo.h initialize.h killchild.h krb5_auth.h linksupport.h lp.h permission.h portable.h printcap.h serverpid.h setstatus.h utilities.h waitchild.h 
lpd_control.o :	config.h bsd-compat.h cleantext.h control.h debug.h decodestatus.h errormsg.h fileopen.h getqueue.h jobcontrol.h killchild.h linksupport.h lp.h pathname.h patselect.h permission.h portable.h printcap.h serverpid.h setstatus.h setupprinter.h utilities.h waitchild.h 
lpd_getparms.o :	config.h bsd-compat.h debug.h errormsg.h lp.h patchlevel.h portable.h utilities.h 
lpd_jobs.o :	config.h bsd-compat.h checkremote.h cleantext.h debug.h decodestatus.h dump.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getqueue.h jobcontrol.h killchild.h linksupport.h lockfile.h lp.h malloclist.h merge.h pathname.h permission.h portable.h pr_support.h printcap.h printjob.h removejob.h sendjob.h serverpid.h setstatus.h setup_filter.h setupprinter.h utilities.h waitchild.h 
lpd_rcvjob.o :	config.h bsd-compat.h cleantext.h debug.h dump.h errorcodes.h errormsg.h fileopen.h freespace.h gethostinfo.h getqueue.h jobcontrol.h killchild.h linksupport.h lockfile.h lp.h malloclist.h merge.h pathname.h permission.h portable.h serverpid.h setstatus.h setup_filter.h setupprinter.h utilities.h 
lpd_remove.o :	config.h bsd-compat.h checkremote.h cleantext.h debug.h decodestatus.h errorcodes.h errormsg.h gethostinfo.h jobcontrol.h killchild.h linksupport.h lp.h malloclist.h patselect.h permission.h portable.h pr_support.h printcap.h removejob.h sendlprm.h setstatus.h setupprinter.h utilities.h waitchild.h 
lpd_secure.o :	config.h bsd-compat.h cleantext.h debug.h errorcodes.h errormsg.h fileopen.h killchild.h krb5_auth.h linksupport.h lockfile.h lp.h malloclist.h pathname.h permission.h portable.h setup_filter.h setupprinter.h utilities.h waitchild.h 
lpd_sendmail.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h fileopen.h lp.h pathname.h portable.h pr_support.h setup_filter.h utilities.h 
lpd_status.o :	config.h bsd-compat.h cleantext.h debug.h errormsg.h fileopen.h gethostinfo.h getqueue.h jobcontrol.h killchild.h linksupport.h lp.h malloclist.h pathname.h patselect.h permission.h portable.h printcap.h sendlpq.h serverpid.h setup_filter.h setupprinter.h utilities.h 
lpf.o :	
lpq.o :	config.h bsd-compat.h checkremote.h debug.h errormsg.h fileopen.h getprinter.h initialize.h killchild.h lp.h malloclist.h portable.h printcap.h readstatus.h sendlpq.h termclear.h utilities.h 
lpq_getparms.o :	config.h bsd-compat.h debug.h errormsg.h lp.h malloclist.h patchlevel.h portable.h utilities.h 
lpr.o :	config.h bsd-compat.h debug.h dump.h errormsg.h initialize.h killchild.h lp.h pathname.h portable.h sendjob.h setuid.h utilities.h 
lpr_chkparms.o :	config.h bsd-compat.h debug.h errormsg.h getprinter.h getuserinfo.h lp.h portable.h utilities.h 
lpr_cpyfiles.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h fileopen.h killchild.h lp.h malloclist.h pathname.h portable.h utilities.h 
lpr_getparms.o :	config.h bsd-compat.h debug.h errormsg.h getparms.h lp.h patchlevel.h portable.h utilities.h 
lpr_makejob.o :	config.h bsd-compat.h debug.h dump.h errormsg.h lp.h malloclist.h portable.h utilities.h 
lpraccnt.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
lprm.o :	config.h bsd-compat.h debug.h errormsg.h getprinter.h initialize.h killchild.h lp.h portable.h sendlprm.h utilities.h 
lprm_getparm.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h printcap.h utilities.h 
malloclist.o :	config.h bsd-compat.h debug.h errormsg.h lp.h malloclist.h portable.h utilities.h 
merge.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
monitor.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
parse_debug.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h killchild.h lp.h portable.h utilities.h 
pathname.o :	config.h bsd-compat.h debug.h errormsg.h lp.h pathname.h portable.h utilities.h 
patselect.o :	config.h bsd-compat.h debug.h errormsg.h globmatch.h lp.h patselect.h portable.h utilities.h 
permissions.o :	config.h bsd-compat.h debug.h dump.h errormsg.h fileopen.h gethostinfo.h globmatch.h lp.h malloclist.h permission.h portable.h setup_filter.h utilities.h 
pr_support.o :	config.h bsd-compat.h debug.h decodestatus.h errorcodes.h errormsg.h fileopen.h killchild.h linksupport.h lockfile.h lp.h portable.h pr_support.h printcap.h setstatus.h setup_filter.h stty.h timeout.h utilities.h waitchild.h 
printcap.o :	config.h bsd-compat.h cleantext.h debug.h dump.h errormsg.h fileopen.h gethostinfo.h globmatch.h lp.h malloclist.h merge.h pathname.h portable.h printcap.h setup_filter.h utilities.h 
printjob.o :	config.h bsd-compat.h debug.h decodestatus.h dump.h errorcodes.h errormsg.h fileopen.h jobcontrol.h killchild.h linksupport.h lp.h malloclist.h portable.h pr_support.h printcap.h printjob.h setstatus.h setup_filter.h utilities.h waitchild.h 
proctitle.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
readfilecount.o :	config.h portable.h 
readstatus.o :	config.h bsd-compat.h cleantext.h debug.h errormsg.h killchild.h linksupport.h lp.h malloclist.h portable.h readstatus.h setstatus.h utilities.h 
removejob.o :	config.h bsd-compat.h debug.h dump.h errormsg.h fileopen.h jobcontrol.h lp.h portable.h removejob.h setstatus.h utilities.h 
removeoneline.o :	config.h portable.h 
rw_pipe.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h rw_pipe.h utilities.h 
sclient.o :	config.h bsd-compat.h debug.h errormsg.h krb5_auth.h lp.h portable.h utilities.h 
sendauth.o :	config.h bsd-compat.h cleantext.h debug.h errorcodes.h errormsg.h fileopen.h killchild.h krb5_auth.h linksupport.h lp.h malloclist.h portable.h printcap.h sendauth.h setstatus.h setup_filter.h utilities.h 
sendjob.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h fileopen.h fixcontrol.h jobcontrol.h killchild.h linksupport.h lp.h malloclist.h portable.h pr_support.h printcap.h printjob.h readstatus.h sendauth.h sendjob.h setstatus.h setup_filter.h utilities.h 
sendlpc.o :	config.h bsd-compat.h control.h debug.h errorcodes.h errormsg.h fileopen.h getprinter.h killchild.h linksupport.h lp.h portable.h readstatus.h sendauth.h sendlpc.h setstatus.h utilities.h 
sendlpq.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h killchild.h linksupport.h lp.h portable.h readstatus.h sendauth.h sendlpq.h utilities.h 
sendlprm.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h killchild.h linksupport.h lp.h portable.h readstatus.h sendauth.h sendlprm.h setstatus.h utilities.h 
serverpid.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h serverpid.h utilities.h 
setstatus.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h fileopen.h linksupport.h lp.h pathname.h portable.h setstatus.h utilities.h 
setuid.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h setuid.h utilities.h 
setup_filter.o :	config.h bsd-compat.h cleantext.h debug.h decodestatus.h dump.h errorcodes.h errormsg.h gethostinfo.h jobcontrol.h killchild.h lp.h malloclist.h pathname.h portable.h pr_support.h printcap.h rw_pipe.h setstatus.h setuid.h setup_filter.h timeout.h utilities.h waitchild.h 
setupauth.o :	config.h portable.h 
setupprinter.o :	config.h bsd-compat.h checkremote.h cleantext.h debug.h dump.h errormsg.h fileopen.h getcnfginfo.h getqueue.h jobcontrol.h lp.h pathname.h permission.h portable.h pr_support.h printcap.h setupprinter.h utilities.h 
snprintf.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h utilities.h 
spoolcontrol.o :	config.h bsd-compat.h debug.h errorcodes.h errormsg.h lockfile.h lp.h malloclist.h pathname.h portable.h utilities.h 
sserver.o :	config.h bsd-compat.h debug.h errormsg.h krb5_auth.h lp.h portable.h utilities.h 
stty.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h stty.h utilities.h 
termclear.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h termclear.h utilities.h 
timeout.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h timeout.h utilities.h 
utilities.o :	config.h bsd-compat.h debug.h errormsg.h lp.h portable.h timeout.h utilities.h 
vars.o :	config.h bsd-compat.h debug.h errormsg.h fileopen.h lp.h permission.h portable.h pr_support.h printcap.h setuid.h timeout.h utilities.h waitchild.h 
waitchild.o :	config.h bsd-compat.h debug.h decodestatus.h errormsg.h killchild.h lp.h portable.h timeout.h utilities.h waitchild.h 
