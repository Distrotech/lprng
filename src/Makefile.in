##########################################################################
# LPRng - An Extended Print Spooler System
#
# Copyright 1988-2000 Patrick Powell, San Diego, California
#     papowell@lprng.com
# See LICENSE for conditions of use.
#
###########################################################################
# MODULE: Makefile
# $Id: Makefile.in,v 1.39 2000/12/25 01:51:03 papowell Exp papowell $
###########################################################################
#

#************** GENERAL CONFIGURATION INFORMATION ************************
# where user commands are installed: lpr, lpq, lprm, lpc.
# Also the SysV emulation commands: lp, lpstat.
# If these paths are /usr/lib, /usr/ucb etc., make sure you
# have backup copies of the system version!
#
#
# These are automatically sedded in by the "configure" script, but you
# may need to change them if you're on a strange version of UNIX.


PACKAGE=@PACKAGE@
VERSION=3.7.3

# where the source directory is
SRC=@srcdir@
top_srcdir=@top_srcdir@
top_builddir=..
# which make we are using
@SET_MAKE@

# what C compiler to use.
CC:=@CC@

# what command to use to "ranlib" or "lorder" the library.
RANLIB=@RANLIB@

# what C preprocessor to use.
CPP:=@CPP@

# how to install stuff.
INSTALLCMD=@INSTALL@
# a shell interpreter that's as close to the POSIX shell as possible.
SHELL_PATH=@SHELL@
SHELL = @SHELL@

# loader for c programs
LDCC=@LDCC@

# any libs that need to be used to get these programs to compile:
LIBS=@INTLLIBS@ @LIBS@

# add path to internationalization
INTLINCS=@INTLINCS@

### PATHS ####
# prefix
prefix=@prefix@
# exec prefix
exec_prefix=@exec_prefix@
# for binaries
bindir=@bindir@
# for admin type of binaries
sbindir=@sbindir@
# for the filters
libexecdir=@libexecdir@
# for the configuration stuff
sysconfdir=@sysconfdir@

# install options

STRIP=@STRIP@

CFLAGS:= @CPPFLAGS@ @CFLAGS@ @DEFS@ \
 -I.. -I${SRC}/include -I${SRC}/common @INTLINCS@ \
 -DCHOWN=\"@CHOWN@\"  \
 -DCHGRP=\"@CHGRP@\"  \
 -DPRINTCAP_PATH=\"@PRINTCAP_PATH@\"  \
 -DLPD_PRINTCAP_PATH=\"@LPD_PRINTCAP_PATH@\"  \
 -DLPD_PERMS_PATH=\"@LPD_PERMS_PATH@\"  \
 -DLPD_CONF_PATH=\"@LPD_CONF_PATH@\"  \
 -DREQUIRE_CONFIGFILES=\"@REQUIRE_CONFIGFILES@\"  \
 -DFILTER_PATH=\"@FILTER_PATH@\"  \
 -DLD_LIBRARY_PATH=\"@LD_LIBRARY_PATH@\"  \
 -DLOCKFILE=\"@LOCKFILE@\"  \
 -DCLEAR=\"@CLEAR@\"  \
 -DUSERID=\"@USERID@\"  \
 -DGROUPID=\"@GROUPID@\"  \
 -DLOCALEDIR=\"@LOCALEDIR@\"


USER_OBJS := @USER_OBJS@
LDFLAGS   := @LDFLAGS@
FILTER_DIR = @FILTER_DIR@
LPD_DIR    = @LPD_DIR@

STRIP      = @STRIP@

#********************** End of configure modifiable settings ************


#********************** OPTIONAL DEFINITIONS ****************************
# These are various flags and settings that will be used by the
# compiler to generate code
#

#### ****** TESTING AND SECURITY LOOPHOLE ******************************
# Define G ETENV to allow the LPD_CONFIG environment
#  variable to be used as the name of a configuration file.  In non-testing
#  systems,  this is a security loophole.
#CFLAGS:= $(CFLAGS) -DGETENV=\"1\" -Wall -Werror

# Set location of configuration, permissions, and printcap file
#
#GNU

# CFLAGS:= $(CFLAGS) -DFORMAT_TEST -Wall -Wformat


##### DMalloc Debugging Package
#
#CFLAGS:= $(CFLAGS) -DDMALLOC
#LIBS:= $(LIBS) -ldmalloc


#********************* OVERRIDING CONFIGURES' GUESSES ******************
#
#
# If you get errors similar to the ones below, it may be
# because "configure" guessed wrong. You can override the
# guesses here, by uncommenting the appropriate line...

# "recvfiles.c: unknown struct fsb has no size":
# define STATFS: to use statfs(2) (BSD)
#        STATVFS: to use statvfs(2) (SVR4)
#     others for system specific cases
#
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STATFS=ULTRIX_STATFS
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STATFS=SVR3_STATFS
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STATFS=STATVFS
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STATFS=STATFS

# define MAKE_USE_STTY = 
#    SGTTYB   to use struct sgttyb and <sgtty.h> (BSD)
#    TERMIO  to use struct termio and <termio.h> (old sysV)
#    TERMIOS to use struct termios and <termio.h> (SVR4)
#
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STTY=SGTTYB
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STTY=TERMIO
# CFLAGS:= $(CFLAGS) -DMAKE_USE_STTY=TERMIOS

# a better way to do this is to edit the "ARGH" section of portable.h,
# and add the appropriate lines to the section for your OS, or add a new
# section if one doesn't exist; then you can send me the patches and
# I'll incorporate them into the distribution.

#
# You might discover that the default locking mechanism
# does not work.  Try one of the following to override the
# configured value: fcntl(), lockf(), flock(), and 0 to suppress locking
#
# CFLAGS:= $(CFLAGS) -DLOCK_DEVS=devlock_fcntl
# CFLAGS:= $(CFLAGS) -DLOCK_DEVS=devlock_lockf
# CFLAGS:= $(CFLAGS) -DLOCK_DEVS=devlock_flock
# CFLAGS:= $(CFLAGS) -DLOCK_DEVS=0
#

# SETPROCTITLE - overwrites the program argument information
#   when ps is used, displays status.  Used only by LPD
# if this does not work, define the following
# CFLAGS:= $(CFLAGS) -DNO_SETPROCTITLE


SRCDIRS=${SRC}/common ${SRC}/AUTHENTICATE
INCLUDE=.. ${SRC}/include ${INTLINCS}

VPATH=..:.:${SRC}/include:${SRC}/common

#**********************  End of Configurable Part ****************************

TARGET= lpc lpd lpq lpr lprm lpf checkpc lp lpstat \
	lpbanner monitor ./lpd.conf

NONTARGET = sserver sclient


LPD_OBJS= lpd.o
LPR_OBJS= lpr.o
LPQ_OBJS= lpq.o
LPSTAT_OBJS= lpstat.o
LPRM_OBJS= lprm.o
LPC_OBJS= lpc.o
CHECKPC_OBJS = checkpc.o
LPF_OBJS = lpf.o plp_snprintf.o
MONITOR_OBJS= monitor.o getopt.o
LPBANNER_OBJS= lpbanner.o plp_snprintf.o

LIBLPR_OBJS = \
	accounting.o child.o controlword.o copyright.o \
	debug.o errormsg.o fileopen.o gethostinfo.o \
	getopt.o getprinter.o getqueue.o globmatch.o \
	initialize.o krb5_auth.o \
	linelist.o linksupport.o lockfile.o \
	lpd_control.o lpd_jobs.o lpd_logger.o lpd_rcvjob.o \
	lpd_remove.o sendauth.o lpd_secure.o lpd_status.o \
	merge.o permission.o plp_snprintf.o printjob.o \
	proctitle.o  sendjob.o sendmail.o sendreq.o \
	stty.o utilities.o vars.o md5.o $(USER_OBJS)

ALL_OBJS = $(LIBLPR_OBJS) \
	$(LPR_OBJS) $(LPQ_OBJS) $(LPC_OBJS) $(LPRM_OBJS) $(LPD_OBJS) \
	$(CHECKPC_OBJS) $(LPF_OBJS) $(LPRACCNT_OBJS) $(MONITOR_OBJS) $(LPBANNER_OBJS)

all: $(TARGET)

.PHONY: all ci clean \
	uninstall realclean mostlyclean distclean \
	TAGS info generate



# we want to force defaults to be updated whenever we
# change the options in Makefile or Makefile.bsd
#GNU
vars.o: Makefile
#
#BSD vars.o: Makefile.bsd

#
# use RANLIB with no ordering, or lorder/tsort if it is there
# if you do not have either, fall back and just build archive
# This appears to cover all cases for portability
#


liblpr.a: $(LIBLPR_OBJS)
	ar ruv $@ $(USER_OBJS) $(LIBLPR_ORDER)
	$(RANLIB) $@

lpd: $(LPD_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${LPD_OBJS} liblpr.a $(LIBS)
lpr: $(LPR_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${LPR_OBJS} liblpr.a $(LIBS)
lpq: $(LPQ_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${LPQ_OBJS} liblpr.a $(LIBS)
lpstat: $(LPSTAT_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${LPSTAT_OBJS} liblpr.a $(LIBS)
lprm: $(LPRM_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${LPRM_OBJS} liblpr.a $(LIBS)
lpc: $(LPC_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${LPC_OBJS} liblpr.a $(LIBS)
checkpc: $(CHECKPC_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${CHECKPC_OBJS} liblpr.a $(LIBS)
lpf: $(LPF_OBJS)
	$(LDCC) $(LDFLAGS) -o $@ ${LPF_OBJS} $(LIBS)
lpbanner: $(LPBANNER_OBJS)
	$(LDCC) $(LDFLAGS) -o $@ ${LPBANNER_OBJS} $(LIBS)
monitor: $(MONITOR_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ ${MONITOR_OBJS} liblpr.a $(LIBS)

authenticate_pgp: ${SRC}/AUTHENTICATE/authenticate_pgp.sh
	rm -f $@; cp ${SRC}/AUTHENTICATE/authenticate_pgp.sh $@; chmod 555 $@

sserver: sserver.o liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ sserver.o liblpr.a $(LIBS)
sclient: sclient.o liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ sclient.o liblpr.a $(LIBS)

sendauth.o lpd_secure.o :	user_auth.stub

cancel:
	rm -f $@; ln -s lprm $@ 
lp: lpr
	rm -f $@; ln -s lpr $@

###########################################################################
# lpd.conf

./lpd.conf: Makefile vars.c
	rm -f $@
	echo "# lpd.conf" >$@.tmp
	echo "# VERSION=$(VERSION)" >>$@.tmp
	$(CPP) $(CFLAGS) -C ${SRC}/common/vars.c \
	 | /bin/sh ../UTILS/make_lpd_conf >>$@.tmp
	mv $@.tmp $@
	chmod 644 $@

###########################################################################
#

NORM_PERMS=0755
SUID_ROOT_PERMS=04755 -o root

###########################################################################

install: all
	echo "Clients are being installed @PERMS@";
	for i in ${DESTDIR}${bindir} ${DESTDIR}${sbindir} \
		${DESTDIR}${sysconfdir} \
		${DESTDIR}${LPD_DIR} ${DESTDIR}${FILTER_DIR}; do \
	  if [ ! -d $$i ] ; then ${SRC}/mkinstalldirs $$i ; fi; \
	done;

	${INSTALLCMD} ${STRIP} -m $(@PERMS@) lpq ${DESTDIR}${bindir}
	${INSTALLCMD} ${STRIP} -m $(@PERMS@) lprm ${DESTDIR}${bindir}
	${INSTALLCMD} ${STRIP} -m $(@PERMS@) lpr ${DESTDIR}${bindir}
	${INSTALLCMD} ${STRIP} -m $(@PERMS@) lpstat ${DESTDIR}${bindir}
	${INSTALLCMD} ${STRIP} -m $(@PERMS@) lpc ${DESTDIR}${sbindir}
	${INSTALLCMD} ${STRIP} -m $(NORM_PERMS) lpd ${DESTDIR}${LPD_DIR}
	${INSTALLCMD} ${STRIP} -m $(NORM_PERMS) lpf ${DESTDIR}${FILTER_DIR}
	${INSTALLCMD} ${STRIP} -m $(NORM_PERMS) lpbanner ${DESTDIR}${FILTER_DIR}
	${INSTALLCMD}    -m $(NORM_PERMS) pclbanner ${DESTDIR}${FILTER_DIR}
	${INSTALLCMD}    -m $(NORM_PERMS) psbanner ${DESTDIR}${FILTER_DIR}
	${INSTALLCMD} ${STRIP} -m $(NORM_PERMS) checkpc ${DESTDIR}${sbindir}
	cd ${DESTDIR}${bindir}; rm -f lp cancel; ln -s lpr lp; ln -s lprm cancel;

uninstall:
	rm -f ${DESTDIR}${LPD_DIR}/lpd
	cd ${DESTDIR}${FILTER_DIR}; rm -f lpf lpbanner pclbanner psbanner
	cd ${DESTDIR}${bindir}; rm -f lp lpq lpstat lpr lp cancel;
	cd ${DESTDIR}${sbindir}; rm -f lpc checkpc


###########################################################################


clean::
	-rm -f *.o *.tmp *core *.a ? ?.bak ?.orig $(TARGET) $(NONTARGET) st[0-9]* \
	tags ./lpd.conf

realclean mostlyclean distclean:: clean
	-rm -f Makefile Makefile.bsd

info:
tags TAGS:
	ctags -t -d `ls common/*.c include/*.h | sed -e '/checkpc.c/d' `

###########################################################################

CI=
#CO=-kv
CO=-l

cifiles:
	if [ ! -d RCS ] ; then mkdir RCS ; fi ;
	checkin() { \
		rcs -l $$1; \
		ci $(CI) -mUpdate -t-Initial $$1; \
		co $(CO) $$1; \
	}; \
	for i in *; do \
		if [ -f "$$i" ] ; then \
			case $$i in \
				Makefile*|*install* ) echo $$i; checkin $$i ;; \
				*.in ) echo $$i; checkin $$i ;; \
			esac; \
		fi; \
	done;

cifast ci: cifiles
	checkin() { \
		rcs -l $$1; \
		ci $(CI) -mUpdate -t-Initial $$1; \
		co $(CO) $$1; \
	}; \
	for i in *; do \
		if [ -d "$$i" ] ; then \
			case $$i in \
			RCS ) ;; \
			* ) if [ ! -d $$i/RCS ] ; then mkdir $$i/RCS ; fi ; \
				for j in $$i/*; do \
					if [ -f "$$j" ] ; then \
						checkin $$j; \
					fi; \
				done; \
				;; \
			esac; \
		fi; \
	done;

depend: /tmp/dep /tmp/order
	( sed -n '1,/^##.*GENERATED/p' ${SRC}/Makefile.in; \
		echo ; echo; \
	echo "########### LIBRARY ORDER #########"; \
	cat /tmp/order; \
	echo ; echo; \
	echo "########### DEPENDENCIES #########"; \
	cat /tmp/dep; ) >/tmp/Makefile.in
	mv ${SRC}/Makefile.in ${SRC}/Makefile.in.old
	cp /tmp/Makefile.in ${SRC}/Makefile.in
	( sed -n '1,/^##.*GENERATED/p' ${SRC}/Makefile; \
		echo ; echo; \
	echo "########### LIBRARY ORDER #########"; \
	cat /tmp/order; \
	echo ; echo; \
	echo "########### DEPENDENCIES #########"; \
	cat /tmp/dep; ) >/tmp/Makefile
	mv ${SRC}/Makefile ${SRC}/Makefile.old
	cp /tmp/Makefile ${SRC}/Makefile


/tmp/dep:: Makefile
/tmp/dep:: $(ALL_OBJS)
	CFLAGS="${CFLAGS}" ${SRC}/../UTILS/makeinc $(ALL_OBJS) >$@

# make the order in which library files should be loader
# this requires hand tuning the makefile, but it is easier than
# trying to fix up things with conditional tests
#
/tmp/order:: Makefile
/tmp/order:: $(LIBLPR_OBJS)
	lorder $(LIBLPR_OBJS) |tsort >/tmp/raw
	awk '\
		BEGIN { print "LIBLPR_ORDER = \\"; } \
		{ line = line " " $$0;            \
			if( ++i >= 4 ){               \
				print "\t" line "\\";    \
				line = "";               \
				i = 0;                   \
			}                            \
		}                                \
		END {                            \
			if( line != "" ){            \
				print "\t" line;         \
			}                            \
		}' /tmp/raw >/tmp/order
    
	
############# GENERATED ###################################################


########### LIBRARY ORDER #########
LIBLPR_ORDER = \
	 lpd_status.o lpd_logger.o lpd_control.o krb5_auth.o\
	 initialize.o getopt.o copyright.o controlword.o\
	 proctitle.o utilities.o sendreq.o sendjob.o\
	 merge.o lpd_secure.o sendauth.o md5.o\
	 lpd_rcvjob.o lpd_jobs.o accounting.o stty.o\
	 sendmail.o printjob.o lpd_remove.o debug.o\
	 permission.o lockfile.o linksupport.o linelist.o\
	 gethostinfo.o globmatch.o getqueue.o getprinter.o\
	 fileopen.o errormsg.o plp_snprintf.o child.o\
	 vars.o


########### DEPENDENCIES #########
accounting.o :	config.h accounting.h child.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h linksupport.h lp.h lpd.h plp_snprintf.h portable.h utilities.h utilities.h
child.o :	config.h child.h debug.h errormsg.h gethostinfo.h getopt.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
controlword.o :	config.h control.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
copyright.o :	config.h copyright.h debug.h errormsg.h license.h linelist.h lp.h patchlevel.h plp_snprintf.h portable.h utilities.h utilities.h
debug.o :	config.h child.h debug.h errorcodes.h errormsg.h getopt.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
errormsg.o :	config.h child.h debug.h errorcodes.h errormsg.h getopt.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
fileopen.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
gethostinfo.o :	config.h debug.h errormsg.h gethostinfo.h getqueue.h globmatch.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getopt.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getprinter.o :	config.h child.h debug.h errormsg.h gethostinfo.h getprinter.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getqueue.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getprinter.h getqueue.h globmatch.h linelist.h lockfile.h lp.h merge.h permission.h plp_snprintf.h portable.h utilities.h utilities.h
globmatch.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
initialize.o :	config.h debug.h errorcodes.h errormsg.h gethostinfo.h getopt.h getqueue.h initialize.h linelist.h lp.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
krb5_auth.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getqueue.h krb5_auth.h linelist.h linksupport.h lp.h permission.h plp_snprintf.h portable.h utilities.h utilities.h
linelist.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getprinter.h getqueue.h globmatch.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
linksupport.o :	config.h debug.h errorcodes.h errormsg.h gethostinfo.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
lockfile.o :	config.h debug.h errormsg.h fileopen.h linelist.h lockfile.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
lpd_control.o :	config.h child.h control.h debug.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h globmatch.h linelist.h lp.h lpd.h lpd_control.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_jobs.o :	config.h accounting.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h linelist.h linksupport.h lockfile.h lp.h lpd.h lpd_jobs.h lpd_rcvjob.h lpd_remove.h merge.h permission.h plp_snprintf.h portable.h printjob.h proctitle.h sendjob.h sendmail.h stty.h utilities.h utilities.h
lpd_logger.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getopt.h getprinter.h getqueue.h linelist.h linksupport.h lp.h lpd.h lpd_logger.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_rcvjob.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getqueue.h linelist.h linksupport.h lockfile.h lp.h lpd.h lpd_jobs.h lpd_rcvjob.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_remove.o :	config.h child.h debug.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h linelist.h lp.h lpd_remove.h permission.h plp_snprintf.h portable.h proctitle.h sendreq.h utilities.h utilities.h
sendauth.o :	config.h user_auth.stub child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getqueue.h globmatch.h krb5_auth.h linelist.h linksupport.h lp.h lpd.h md5.h permission.h plp_snprintf.h portable.h sendauth.h sendjob.h utilities.h utilities.h
lpd_secure.o :	config.h user_auth.stub child.h debug.h errorcodes.h errormsg.h fileopen.h getopt.h getqueue.h globmatch.h krb5_auth.h linelist.h linksupport.h lp.h lpd.h lpd_jobs.h lpd_rcvjob.h lpd_secure.h md5.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_status.o :	config.h child.h debug.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h globmatch.h linelist.h lockfile.h lp.h lpd_status.h permission.h plp_snprintf.h portable.h proctitle.h sendreq.h utilities.h utilities.h
merge.o :	config.h debug.h errormsg.h linelist.h lp.h merge.h plp_snprintf.h portable.h utilities.h utilities.h
permission.o :	config.h debug.h errormsg.h fileopen.h gethostinfo.h getqueue.h globmatch.h linelist.h linksupport.h lp.h permission.h plp_snprintf.h portable.h utilities.h utilities.h
plp_snprintf.o :	config.h config.h
printjob.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h printjob.h utilities.h utilities.h
proctitle.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
sendjob.o :	config.h accounting.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h sendauth.h sendjob.h utilities.h utilities.h
sendmail.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h sendmail.h utilities.h utilities.h
sendreq.o :	config.h child.h debug.h errormsg.h fileopen.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h readstatus.h sendauth.h sendreq.h utilities.h utilities.h
stty.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h stty.h utilities.h utilities.h
utilities.o :	config.h debug.h errorcodes.h errormsg.h getopt.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
vars.o :	config.h accounting.h child.h debug.h errormsg.h gethostinfo.h getqueue.h linelist.h lp.h permission.h plp_snprintf.h portable.h printjob.h utilities.h utilities.h
md5.o :	md5.h md5.h
lpr.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h initialize.h linelist.h linksupport.h lp.h lpr.h patchlevel.h plp_snprintf.h portable.h printjob.h sendjob.h utilities.h utilities.h
lpq.o :	config.h child.h debug.h errormsg.h getopt.h getprinter.h getqueue.h initialize.h linelist.h linksupport.h lp.h lpq.h patchlevel.h plp_snprintf.h portable.h sendreq.h utilities.h utilities.h
lpc.o :	config.h child.h control.h debug.h errorcodes.h errormsg.h getopt.h getprinter.h initialize.h linelist.h lp.h lpc.h patchlevel.h plp_snprintf.h portable.h sendreq.h utilities.h utilities.h
lprm.o :	config.h child.h debug.h errormsg.h getopt.h getprinter.h getqueue.h initialize.h linelist.h linksupport.h lp.h lprm.h patchlevel.h plp_snprintf.h portable.h sendreq.h utilities.h utilities.h
lpd.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h initialize.h krb5_auth.h linelist.h linksupport.h lp.h lpd.h lpd_control.h lpd_jobs.h lpd_logger.h lpd_rcvjob.h lpd_remove.h lpd_secure.h lpd_status.h patchlevel.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
checkpc.o :	config.h checkpc.h child.h debug.h errormsg.h fileopen.h getopt.h getprinter.h getqueue.h initialize.h linelist.h lockfile.h lp.h lpd_remove.h patchlevel.h plp_snprintf.h portable.h proctitle.h stty.h utilities.h utilities.h
lpf.o :	config.h portable.h portable.h
plp_snprintf.o :	config.h config.h
monitor.o :	config.h debug.h errormsg.h getopt.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getopt.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
lpbanner.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
plp_snprintf.o :	config.h config.h
